/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['main.js']) {
  _$jscoverage['main.js'] = [];
  _$jscoverage['main.js'][1] = 0;
  _$jscoverage['main.js'][2] = 0;
  _$jscoverage['main.js'][3] = 0;
  _$jscoverage['main.js'][5] = 0;
  _$jscoverage['main.js'][6] = 0;
  _$jscoverage['main.js'][7] = 0;
  _$jscoverage['main.js'][8] = 0;
  _$jscoverage['main.js'][9] = 0;
  _$jscoverage['main.js'][10] = 0;
  _$jscoverage['main.js'][13] = 0;
  _$jscoverage['main.js'][17] = 0;
  _$jscoverage['main.js'][18] = 0;
  _$jscoverage['main.js'][20] = 0;
  _$jscoverage['main.js'][21] = 0;
  _$jscoverage['main.js'][25] = 0;
  _$jscoverage['main.js'][28] = 0;
  _$jscoverage['main.js'][29] = 0;
  _$jscoverage['main.js'][32] = 0;
  _$jscoverage['main.js'][33] = 0;
  _$jscoverage['main.js'][34] = 0;
  _$jscoverage['main.js'][37] = 0;
  _$jscoverage['main.js'][39] = 0;
  _$jscoverage['main.js'][41] = 0;
  _$jscoverage['main.js'][43] = 0;
  _$jscoverage['main.js'][44] = 0;
  _$jscoverage['main.js'][46] = 0;
  _$jscoverage['main.js'][47] = 0;
  _$jscoverage['main.js'][50] = 0;
  _$jscoverage['main.js'][51] = 0;
  _$jscoverage['main.js'][52] = 0;
  _$jscoverage['main.js'][56] = 0;
  _$jscoverage['main.js'][58] = 0;
  _$jscoverage['main.js'][60] = 0;
  _$jscoverage['main.js'][61] = 0;
  _$jscoverage['main.js'][62] = 0;
  _$jscoverage['main.js'][66] = 0;
  _$jscoverage['main.js'][68] = 0;
  _$jscoverage['main.js'][71] = 0;
  _$jscoverage['main.js'][72] = 0;
  _$jscoverage['main.js'][76] = 0;
  _$jscoverage['main.js'][77] = 0;
  _$jscoverage['main.js'][80] = 0;
  _$jscoverage['main.js'][81] = 0;
  _$jscoverage['main.js'][83] = 0;
  _$jscoverage['main.js'][84] = 0;
  _$jscoverage['main.js'][87] = 0;
  _$jscoverage['main.js'][88] = 0;
  _$jscoverage['main.js'][92] = 0;
  _$jscoverage['main.js'][93] = 0;
  _$jscoverage['main.js'][101] = 0;
  _$jscoverage['main.js'][109] = 0;
  _$jscoverage['main.js'][113] = 0;
  _$jscoverage['main.js'][118] = 0;
  _$jscoverage['main.js'][126] = 0;
  _$jscoverage['main.js'][130] = 0;
  _$jscoverage['main.js'][135] = 0;
  _$jscoverage['main.js'][139] = 0;
  _$jscoverage['main.js'][142] = 0;
  _$jscoverage['main.js'][152] = 0;
  _$jscoverage['main.js'][155] = 0;
  _$jscoverage['main.js'][156] = 0;
  _$jscoverage['main.js'][160] = 0;
  _$jscoverage['main.js'][161] = 0;
  _$jscoverage['main.js'][162] = 0;
  _$jscoverage['main.js'][163] = 0;
  _$jscoverage['main.js'][164] = 0;
  _$jscoverage['main.js'][167] = 0;
  _$jscoverage['main.js'][168] = 0;
  _$jscoverage['main.js'][170] = 0;
  _$jscoverage['main.js'][171] = 0;
  _$jscoverage['main.js'][173] = 0;
  _$jscoverage['main.js'][174] = 0;
  _$jscoverage['main.js'][178] = 0;
  _$jscoverage['main.js'][179] = 0;
  _$jscoverage['main.js'][180] = 0;
  _$jscoverage['main.js'][185] = 0;
  _$jscoverage['main.js'][190] = 0;
  _$jscoverage['main.js'][191] = 0;
  _$jscoverage['main.js'][192] = 0;
  _$jscoverage['main.js'][193] = 0;
  _$jscoverage['main.js'][196] = 0;
}
_$jscoverage['main.js'][1]++;
var requiretree = require("require-tree");
_$jscoverage['main.js'][2]++;
var path = require("path");
_$jscoverage['main.js'][3]++;
var conf = require("../config.json");
_$jscoverage['main.js'][5]++;
var enableCORS = (function (req, res, next) {
  _$jscoverage['main.js'][6]++;
  res.header("Access-Control-Allow-Origin", "*");
  _$jscoverage['main.js'][7]++;
  res.header("Access-Control-Allow-Methods", "GET,PUT,POST,DELETE,OPTIONS");
  _$jscoverage['main.js'][8]++;
  res.header("Access-Control-Allow-Headers", "Content-Type, Authorization, Content-Length, X-Requested-With");
  _$jscoverage['main.js'][9]++;
  if ("OPTIONS" == req.method) {
    _$jscoverage['main.js'][10]++;
    res.send(200);
  }
  else {
    _$jscoverage['main.js'][13]++;
    next();
  }
});
_$jscoverage['main.js'][17]++;
var methodOverride = require("method-override");
_$jscoverage['main.js'][18]++;
var controllers = requiretree("../controllers");
_$jscoverage['main.js'][20]++;
var express = require("express");
_$jscoverage['main.js'][21]++;
var app = express();
_$jscoverage['main.js'][25]++;
app.use(enableCORS);
_$jscoverage['main.js'][28]++;
var colors = require("colors");
_$jscoverage['main.js'][29]++;
colors.setTheme(conf.color_theme);
_$jscoverage['main.js'][32]++;
app.set("port", process.env.PORT || conf.server.port);
_$jscoverage['main.js'][33]++;
app.set("views", __dirname + "/views");
_$jscoverage['main.js'][34]++;
app.set("view engine", "jade");
_$jscoverage['main.js'][37]++;
app.use(express.favicon(path.join(__dirname, "../static/favicon.ico")));
_$jscoverage['main.js'][39]++;
if (process.env.NODE_ENV !== "test") {
  _$jscoverage['main.js'][39]++;
  app.use(express.logger("dev"));
}
_$jscoverage['main.js'][41]++;
app.use(express.cookieParser());
_$jscoverage['main.js'][43]++;
app.use(express.json());
_$jscoverage['main.js'][44]++;
app.use(express.urlencoded());
_$jscoverage['main.js'][46]++;
app.use(methodOverride("X-HTTP-Method-Override"));
_$jscoverage['main.js'][47]++;
app.use(require("../modules/express_mc_sessions")(conf, express));
_$jscoverage['main.js'][50]++;
passport = require("../modules/passport.js")();
_$jscoverage['main.js'][51]++;
app.use(passport.initialize());
_$jscoverage['main.js'][52]++;
app.use(passport.session());
_$jscoverage['main.js'][56]++;
app.use("/static", express["static"](path.join(__dirname, "../static")));
_$jscoverage['main.js'][58]++;
app.use(app.router);
_$jscoverage['main.js'][60]++;
process.on("SIGTERM", (function () {
  _$jscoverage['main.js'][60]++;
  console.log("SIGTERM");
  _$jscoverage['main.js'][60]++;
  process.exit(1);
}));
_$jscoverage['main.js'][61]++;
process.on("SIGHUP", (function () {
  _$jscoverage['main.js'][61]++;
  console.log("SIGHUP");
}));
_$jscoverage['main.js'][62]++;
if ("development" == app.get("env")) {
  _$jscoverage['main.js'][62]++;
  app.use(express.errorHandler());
}
_$jscoverage['main.js'][62]++;
;
_$jscoverage['main.js'][66]++;
var api = require("../modules/api");
_$jscoverage['main.js'][68]++;
app.all("/api/:scheme/:method", api.go);
_$jscoverage['main.js'][71]++;
app.all("/", require("../modules/common_actions_mw"));
_$jscoverage['main.js'][72]++;
app.all("/*", require("../modules/common_actions_mw"));
_$jscoverage['main.js'][76]++;
app.post("/login", (function (req, res, next) {
  _$jscoverage['main.js'][77]++;
  passport.authenticate("local", (function (err, user, info) {
  _$jscoverage['main.js'][80]++;
  if (err) {
    _$jscoverage['main.js'][81]++;
    return res.redirect("/login?err=1");
  }
  else {
    _$jscoverage['main.js'][83]++;
    if (user) {
      _$jscoverage['main.js'][84]++;
      return req.logIn(user, (function (err) {
  _$jscoverage['main.js'][87]++;
  req.session.message = "OK";
  _$jscoverage['main.js'][88]++;
  return err? next(err): res.redirect(req.session.callbackto || "/");
}));
    }
    else {
      _$jscoverage['main.js'][92]++;
      req.session.message = info.message;
      _$jscoverage['main.js'][93]++;
      return res.redirect("/login");
    }
  }
}))(req, res, next);
}));
_$jscoverage['main.js'][101]++;
app.get("/auth/fb", passport.authenticate("facebook"), (function (req, res) {
}));
_$jscoverage['main.js'][109]++;
app.get("/auth/fb/callback", passport.authenticate("facebook", {failureRedirect: "/login"}), (function (req, res) {
  _$jscoverage['main.js'][113]++;
  res.redirect(req.session.callbackto || "/");
}));
_$jscoverage['main.js'][118]++;
app.get("/auth/vk", passport.authenticate("vkontakte"), (function (req, res) {
}));
_$jscoverage['main.js'][126]++;
app.get("/auth/vk/callback", passport.authenticate("vkontakte", {failureRedirect: "/login"}), (function (req, res) {
  _$jscoverage['main.js'][130]++;
  res.redirect(req.session.callbackto || "/");
}));
_$jscoverage['main.js'][135]++;
app.get("/auth/ok/callback", passport.authenticate("odnoklassniki", {failureRedirect: "/login"}), (function (req, res) {
  _$jscoverage['main.js'][139]++;
  res.redirect(req.session.callbackto || "/");
}));
_$jscoverage['main.js'][142]++;
app.get("/auth/ok", passport.authenticate("odnoklassniki"), (function (req, res) {
}));
_$jscoverage['main.js'][152]++;
app.get("/logout", (function (req, res) {
  _$jscoverage['main.js'][155]++;
  req.logOut();
  _$jscoverage['main.js'][156]++;
  res.redirect("/");
}));
_$jscoverage['main.js'][160]++;
app.all("/login", controllers.login.main);
_$jscoverage['main.js'][161]++;
app.all("/login/form", controllers.login.form);
_$jscoverage['main.js'][162]++;
app.all("/login/auth", controllers.login.auth);
_$jscoverage['main.js'][163]++;
app.all("/login/registration", controllers.login.registration);
_$jscoverage['main.js'][164]++;
app.all("/login/restore", controllers.login.restore);
_$jscoverage['main.js'][167]++;
app.all("/news/rubric/:idrubric", controllers.news.rubric);
_$jscoverage['main.js'][168]++;
app.all("/news/tag/:idtag", controllers.news.tag);
_$jscoverage['main.js'][170]++;
app.all("/proglist/view/:idcurrier", controllers.proglist.view);
_$jscoverage['main.js'][171]++;
app.all("/proglist/:idcurrier", controllers.proglist.view);
_$jscoverage['main.js'][173]++;
app.all("/news/mess/:idnews?", controllers.news.mess);
_$jscoverage['main.js'][174]++;
app.all("/news/last/:limit?", controllers.news.last);
_$jscoverage['main.js'][178]++;
app.all("/profile/:iduser?", ensureAuthenticated, controllers.profile.index);
_$jscoverage['main.js'][179]++;
app.all("/profile/:iduser/contact", ensureAuthenticated, controllers.profile.contact);
_$jscoverage['main.js'][180]++;
app.all("/profile/:iduser/password", ensureAuthenticated, controllers.profile.password);
_$jscoverage['main.js'][185]++;
app.all("/", controllers.news.last);
_$jscoverage['main.js'][190]++;
function ensureAuthenticated(req, res, next) {
  _$jscoverage['main.js'][191]++;
  if (req.isAuthenticated()) {
    _$jscoverage['main.js'][191]++;
    return next();
  }
  _$jscoverage['main.js'][192]++;
  res.redirect("/login");
}
_$jscoverage['main.js'][193]++;
;
_$jscoverage['main.js'][196]++;
module.exports = app;
_$jscoverage['main.js'].source = ["var requiretree = require('require-tree');","var path = require('path');","var conf = require(\"../config.json\");","","var enableCORS = function(req, res, next) {","    res.header('Access-Control-Allow-Origin', '*');","    res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');","    res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Content-Length, X-Requested-With');","    if ('OPTIONS' == req.method) {","      res.send(200);","    }","    else {","      next();","    }","};","","var methodOverride = require('method-override')","var controllers = requiretree('../controllers');\t\t// &#208;&#178;&#208;&#176;&#208;&#182;&#208;&#181;&#208;&#189; &#208;&#191;&#208;&#190;&#209;&#128;&#209;&#143;&#208;&#180;&#208;&#190;&#208;&#186;","","var express = require('express');","var app = express();","","","","app.use(enableCORS);","","// Colors","var colors = require('colors');","colors.setTheme(conf.color_theme);","//","","app.set('port', process.env.PORT || conf.server.port);","app.set('views', __dirname + '/views');","app.set('view engine', 'jade');","","","app.use(express.favicon(path.join(__dirname,  '../static/favicon.ico')));","","if(process.env.NODE_ENV !== 'test') { app.use(express.logger('dev')); }","","app.use(express.cookieParser());","","app.use(express.json());","app.use(express.urlencoded());","","app.use(methodOverride('X-HTTP-Method-Override'));","app.use(require('../modules/express_mc_sessions')(conf, express));","","","passport=require('../modules/passport.js')();","app.use(passport.initialize());","app.use(passport.session());","","","","app.use('/static', express.static(path.join(__dirname, '../static')));","","app.use(app.router);","","process.on('SIGTERM', function(){console.log('SIGTERM');process.exit(1);});","process.on('SIGHUP', function(){console.log('SIGHUP');});","if ('development' == app.get('env')){app.use(express.errorHandler());};","","","","var api = require('../modules/api');","","\tapp.all('/api/:scheme/:method', api.go);","","/* ----------------------- routes ------------------------------ */","\tapp.all('/', require('../modules/common_actions_mw'));","\tapp.all('/*', require('../modules/common_actions_mw'));","","","\t// -----------------  LOCAL  ---------------------","\tapp.post('/login', function(req, res, next) {","\t\tpassport.authenticate(","\t\t\t'local',","\t\t\tfunction(err, user, info) {","\t\t\t\tif(err){","\t\t\t\t\treturn res.redirect('/login?err=1');","\t\t\t\t}else{","\t\t\t\t\tif(user){","\t\t\t\t\t\treturn req.logIn(","\t\t\t\t\t\t\tuser,","\t\t\t\t\t\t\tfunction(err) {","\t\t\t\t\t\t\t\treq.session.message='OK';","\t\t\t\t\t\t\t\treturn err? next(err) : res.redirect(req.session.callbackto || '/');","\t\t\t\t\t\t\t}","\t\t\t\t\t\t)","\t\t\t\t\t}else{","\t\t\t\t\t\treq.session.message=info.message;","\t\t\t\t\t\treturn res.redirect('/login');","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t)(req, res, next);","\t});","","\t// -----------------  FACEBOOK  ---------------------","\tapp.get(","\t\t'/auth/fb',","\t\tpassport.authenticate('facebook'),","\t\tfunction(req, res){","\t\t\t// The request will be redirected to Facebook for authentication, so this","\t\t\t// function will not be called.","\t\t}","\t);","\tapp.get(","\t\t'/auth/fb/callback',","\t\tpassport.authenticate('facebook', { failureRedirect: '/login' }),","\t\tfunction(req, res) {","\t\t\tres.redirect(req.session.callbackto || '/');","\t\t}","\t);","","\t// -----------------  VKONTAKTE  ---------------------","\tapp.get(","\t\t'/auth/vk',","\t\tpassport.authenticate('vkontakte'),","\t\tfunction(req, res){","\t\t\t// The request will be redirected to Facebook for authentication, so this","\t\t\t// function will not be called.","\t\t}","\t);","\tapp.get(","\t\t'/auth/vk/callback',","\t\tpassport.authenticate('vkontakte', { failureRedirect: '/login' }),","\t\tfunction(req, res) {","\t\t\tres.redirect(req.session.callbackto || '/');","\t\t}","\t);","","\t// -----------------  ODNOKLASSNIKI  ---------------------","\tapp.get(","\t\t'/auth/ok/callback',","\t\tpassport.authenticate('odnoklassniki', { failureRedirect: '/login' }),","\t\tfunction(req, res) {","\t\t\tres.redirect(req.session.callbackto || '/');","\t\t}","\t);","\tapp.get(","\t\t'/auth/ok',","\t\tpassport.authenticate('odnoklassniki'),","\t\tfunction(req, res){","\t\t\t// The request will be redirected to Facebook for authentication, so this","\t\t\t// function will not be called.","\t\t}","\t);","","\t// -----------------  All  ---------------------","\tapp.get(","\t\t'/logout',","\t\tfunction(req, res) {","\t\t\treq.logOut();","\t\t\tres.redirect('/');","\t\t}","\t);","","\tapp.all('/login', controllers.login.main);","\tapp.all('/login/form', controllers.login.form);","\tapp.all('/login/auth', controllers.login.auth);","\tapp.all('/login/registration', controllers.login.registration);","\tapp.all('/login/restore', controllers.login.restore);","","","\tapp.all('/news/rubric/:idrubric', controllers.news.rubric);","\tapp.all('/news/tag/:idtag', controllers.news.tag);","","\tapp.all('/proglist/view/:idcurrier', controllers.proglist.view);","\tapp.all('/proglist/:idcurrier', controllers.proglist.view); //&#209;&#129;&#208;&#184;&#208;&#189;&#208;&#190;&#208;&#189;&#208;&#184;&#208;&#188; &#208;&#191;&#209;&#128;&#208;&#181;&#208;&#180;&#209;&#139;&#208;&#180;&#209;&#131;&#209;&#137;&#208;&#181;&#208;&#185; &#209;&#129;&#209;&#130;&#209;&#128;&#208;&#190;&#208;&#186;&#208;&#184;","","\tapp.all('/news/mess/:idnews?', controllers.news.mess);","\tapp.all('/news/last/:limit?', controllers.news.last);","","","","\tapp.all('/profile/:iduser?', ensureAuthenticated, controllers.profile.index);","\tapp.all('/profile/:iduser/contact', ensureAuthenticated, controllers.profile.contact);","\tapp.all('/profile/:iduser/password', ensureAuthenticated, controllers.profile.password);","","","//\tapp.get('/', controllers.root);","","\tapp.all('/', controllers.news.last);","","","/* --------------------- end routes ------------------------------ */","","function ensureAuthenticated(req, res, next) {","  if (req.isAuthenticated()) { return next(); }","  res.redirect('/login')","};","","","module.exports = app;",""];
